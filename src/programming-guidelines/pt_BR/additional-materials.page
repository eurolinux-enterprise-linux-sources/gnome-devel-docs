<?xml version="1.0" encoding="utf-8"?>
<page xmlns="http://projectmallard.org/1.0/" xmlns:its="http://www.w3.org/2005/11/its" type="guide" style="task" id="additional-materials" xml:lang="pt-BR">

  <info>
    <link type="guide" xref="index#references"/>
    
    <credit type="author copyright">
      <name>Federico Mena-Quintero</name>
      <email its:translate="no">federico@gnome.org</email>
      <years>2013</years>
    </credit>

    <include xmlns="http://www.w3.org/2001/XInclude" href="cc-by-sa-3-0.xml"/>

    <desc>Outros guias de estilo e livros sobre organização de projetos de software livre</desc>
  
    <mal:credit xmlns:mal="http://projectmallard.org/1.0/" type="translator copyright">
      <mal:name>Rafael Fontenelle</mal:name>
      <mal:email>rafaelff@gnome.org</mal:email>
      <mal:years>2017</mal:years>
    </mal:credit>
  </info>

  <title>Materiais adicionais</title>

  <p>Aqui nós fornecemos links para outros materiais que você pode querer ler. Eles o ensinarão muito sobre como trabalhar em equipes grandes e distribuídas de desenvolvedores de software livre, e sobre bom estilo de programação em geral.</p>

  <list>
    <item>
      <p><link href="http://producingoss.com/">Producing Open Source Software</link> (Produzindo Software de Código Aberto), por Karl Fogel. Esse é realmente um excelente livro para boas práticas que projetos de software livre devem seguir. Trata sobre <em>aspectos sociais</em> do projeto: como tratar contribuidores, como organizar e moderar comunicação, como lidar com fundações sem fins lucrativos. Se você em algum momento se perguntar “como eu deveria lidar com $situação_humana no projeto?”, este livro pode lhe fornecer a resposta.</p>
    </item>

    <item>
      <p><link href="http://www.gnu.org/prep/standards/">GNU Coding Standards</link> (Padrões de codificação GNU). Esse é um documento antigo, mas ele ainda possui muitos excelentes conselhos. Ele fala sobre estilo de codificação C, questões ao lidar com sistemas de plug-in, nomes comuns de opções para programas de linha de comando, convenções para Makefiles e alguns detalhes bem relacionados só GNU, como o uso de Texinfo para documentação</p>
    </item>

    <item>
      <p><link href="https://www.kernel.org/doc/Documentation/process/coding-style.rst"> Linux Kernel Coding Style</link> (Estilo de Codificação do Kernel Linux). Explica a fundamentação para o “recuo grande”, posicionamento de chaves, nomenclatura concisa sem ser ambígua e saída centralizada de funções.</p>
    </item>
  </list>
</page>
