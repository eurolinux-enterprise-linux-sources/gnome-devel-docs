<?xml version="1.0" encoding="utf-8"?>
<page xmlns="http://projectmallard.org/1.0/" xmlns:its="http://www.w3.org/2005/11/its" xmlns:xi="http://www.w3.org/2001/XInclude" type="guide" style="task" id="GtkApplicationWindow.py" xml:lang="cs">
  <info>
    <title type="text">ApplicationWindow (Python)</title>
    <link type="guide" xref="beginner.py#windows"/>
    <link type="seealso" xref="properties.py"/>
    <link type="next" xref="image.py"/>
    <revision version="0.1" date="2012-06-10" status="draft"/>

    <credit type="author copyright">
      <name>Tiffany Antopolski</name>
      <email its:translate="no">tiffany.antopolski@gmail.com</email>
      <years>2012</years>
    </credit>
    <credit type="author">
      <name>Marta Maria Casetti</name>
      <email its:translate="no">mmcasetti@gmail.com</email>
      <years>2012</years>
    </credit>

    <desc>Podtřída GtkWindow s podporou GtkApplication</desc>
  </info>

  <title>ApplicationWindow</title>
  <media type="image" mime="image/png" src="media/window.png"/>
  <p>Nejjednodušší okno GtkApplication, které umí podporovat <link xref="gmenu.py"/>.</p>

  <links type="section"/>

  <section id="code">
  <title>Kód použitý k vygenerování tohoto příkladu</title>

  <code mime="text/x-python" style="numbered">from gi.repository import Gtk
import sys

# Gtk ApplicationWindow


class MyWindow(Gtk.ApplicationWindow):
    # Konstruktor: název je "Welcome to GNOME" a okno náleží
    # aplikaci app

    def __init__(self, app):
        Gtk.Window.__init__(self, title="Welcome to GNOME", application=app)


class MyApplication(Gtk.Application):
    # Konstruktor Gtk Application

    def __init__(self):
        Gtk.Application.__init__(self)

    # Vytvoří a aktivuje MyWindow, se self (MyApplication) jako aplikací, 
    # ke které okno patří.
    # Všimněte si, že funkce activate() v jazyce C se změní na do_activate()
    # v jazyce Python
    def do_activate(self):
        win = MyWindow(self)
        # Zobrazí okno a veškerý jeho obsah
        # Tento řádek by mohl být stejně dobře v konstruktoru MyWindow
        win.show_all()

    # Spustí aplikaci
    # Všimněte si, že funkce starup() v jazyce C se změní na do_startup()
    # v jazyce Python
    def do_startup(self):
        Gtk.Application.do_startup(self)

# Vytvoří a spustí aplikaci; skončí s hodnotou vrácenou běžícím programem
app = MyApplication()
exit_status = app.run(sys.argv)
sys.exit(exit_status)
</code>

  </section>
  <section id="methods">
  <title>Užitečné metody widgetu Gtk.ApplicationWindow</title>

  <list>
    <item><p><code>set_default_size(200, 100)</code> nastaví výchozí velikost okna na šířku <code>200</code> a výšku <code>100</code>. Když místo kladného čísla předáte <code>-1</code> dostanete výchozí velikost.</p></item>
    <item><p><code>set_position(Gtk.WindowPosition.CENTER)</code> umístí okno na střed. Další možnosti jsou <code>Gtk.WindowPosition.NONE</code> (neurčeno), <code>Gtk.WindowPosition.MOUSE</code> (pozice ukazatele myši), <code>Gtk.WindowPosition.CENTER_ALWAYS</code> (vždy na střed) a <code>Gtk.WindowPosition.CENTER_ON_PARENT</code> (na střed rodiče).</p></item>
  </list>
  </section>

  <section id="references">
  <title>Odkazy k API</title>
  <p>V této ukázce se používá následující:</p>
  <list>
    <item><p><link href="http://developer.gnome.org/gtk3/unstable/GtkApplication.html">GtkApplication</link></p></item>
    <item><p><link href="http://developer.gnome.org/gtk3/unstable/GtkApplicationWindow.html">GtkApplicationWindow</link></p></item>
  </list>
  </section>
</page>
