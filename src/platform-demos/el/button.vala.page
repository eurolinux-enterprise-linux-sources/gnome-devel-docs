<?xml version="1.0" encoding="utf-8"?>
<page xmlns="http://projectmallard.org/1.0/" xmlns:its="http://www.w3.org/2005/11/its" xmlns:xi="http://www.w3.org/2001/XInclude" type="guide" style="task" id="button.vala" xml:lang="el">
  <info>
  <title type="text">Κουμπί (Vala)</title>
    <link type="guide" xref="beginner.vala#buttons"/>
    <link type="seealso" xref="GtkApplicationWindow.vala"/>
    <revision version="0.1" date="2012-02-21" status="stub"/>

    <credit type="author copyright">
      <name>Tiffany Antopolski</name>
      <email its:translate="no">tiffany.antopolski@gmail.com</email>
      <years>2012</years>
    </credit>

    <desc>Ένα κουμπί γραφικού στοιχείου που εκπέμπει σήμα όταν πατηθεί</desc>
  
    <mal:credit xmlns:mal="http://projectmallard.org/1.0/" type="translator copyright">
      <mal:name>Ελληνική μεταφραστική ομάδα GNOME</mal:name>
      <mal:email>team@gnome.gr</mal:email>
      <mal:years>2012-2015</mal:years>
    </mal:credit>
  
    <mal:credit xmlns:mal="http://projectmallard.org/1.0/" type="translator copyright">
      <mal:name>Δημήτρης Σπίγγος</mal:name>
      <mal:email>dmtrs32@gmail.com</mal:email>
      <mal:years>2012, 2013</mal:years>
    </mal:credit>
  
    <mal:credit xmlns:mal="http://projectmallard.org/1.0/" type="translator copyright">
      <mal:name>Μαρία Θουκιδίδου</mal:name>
      <mal:email>marablack3@gmail.com</mal:email>
      <mal:years>2014</mal:years>
    </mal:credit>
  
    <mal:credit xmlns:mal="http://projectmallard.org/1.0/" type="translator copyright">
      <mal:name>Θάνος Τρυφωνίδης</mal:name>
      <mal:email>tomtryf@gmail.com</mal:email>
      <mal:years>2014, 2015</mal:years>
    </mal:credit>
  </info>

  <title>Γραφικό στοιχείο κουμπιού</title>

  <media type="image" mime="image/png" src="media/button.png"/>
  <p>Ένα γραφικό στοιχείο κουμπιού συνδεμένο με μια απλή συνάρτηση επανάκλησης.</p>

<code mime="text/x-csharp" style="numbered">
/* A window in the application */
public class MyWindow : Gtk.ApplicationWindow {

	/* The constructor of the window */
	internal MyWindow (MyApplication app) {
		Object (application: app, title: "GNOME Button");

		var button = new Gtk.Button.with_label ("Click Me");
		button.clicked.connect (this.reverse_label);
		button.show ();

		this.window_position = Gtk.WindowPosition.CENTER;
		this.set_default_size (250,50);
		this.add (button);
	}

	/* The callback function connected to the
	 * 'clicked' signal of the button.
	 */
	void reverse_label (Gtk.Button button) {
		button.label = button.label.reverse ();
	}
}

/* This is the application. */
public class MyApplication : Gtk.Application {

	/* This is the constructor */
	internal MyApplication () {
		Object (application_id: "org.example.MyApplication");
	}

	/* Override the activate signal of GLib.Application */
	protected override void activate () {
		new MyWindow (this).show ();
	}
}

/* main creates and runs the application */
public int main (string[] args) {
	return new MyApplication ().run (args);
}
</code>
<p>Σε αυτό το παράδειγμα χρησιμοποιούμε το παρακάτω: <link href="http://www.valadoc.org/gtk+-3.0/Gtk.Button.html">Gtk.Button</link></p>
</page>
